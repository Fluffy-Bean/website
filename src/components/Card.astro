---
import { getMonth, getDaySuffix } from "../utils";

interface Props {
	post: any,
	base: string,
}

const { post, base } = Astro.props;

const date = new Date(post.data.pubDate);
---

<li class="link-card">
	<a href=`${base}/${post.slug}`>
		<h3>
			{post.data.title}
		</h3>
			{post.data.pubDate ? (
				<p>{date.getDate()}{getDaySuffix(date)} {getMonth(date)} {date.getFullYear()} â€¢ {post.data.description}</p>
			) : (
				<p>{post.data.description}</p>
			)}
	</a>
	<div class="link-card-corner" />
</li>

<style lang="scss">
	@import "../styles/vars.scss";

	$corner-speed: 0.2s;

	.link-card {
		position: relative;

		border-radius: $radius;

		list-style: none;
		overflow: hidden;

		> a {
			padding: 16px;

			height: 100%;
			min-height: 81px;

			display: block;

			text-decoration: none;

			border-radius: $radius;
			border: 2px solid $gray;
			background-color: $dark;
			color: $light;

			transition: background-color $corner-speed ease-in-out;
		}

		.link-card-corner {
			width: 40px;
			height: 40px;

			position: absolute;
			bottom: -40px;
			right: -40px;

			border-top-left-radius: $radius;
			border-top: 2px solid $gray;
			border-left: 2px solid $gray;
			background-image: linear-gradient(135deg, rgba($accent, 0.03), darken($dark, 1%));
			background-color: $dark;
			color: $light;

			box-shadow: -4px -4px 0 rgba(#000, 0);

			transition:
				right $corner-speed ease-in-out,
				bottom $corner-speed ease-in-out,
				box-shadow $corner-speed ease-in-out;
			pointer-events: none;
			overflow: hidden;
			z-index: +3;

			&::after {
				content: '';

				height: 100px;
				width: 100px;

				position: absolute;
				top: -16px;
				left: -16px;

				transform: rotate(-45deg);

				border-top: 2px solid $gray;
				background-color: $dark;

				transition: left $corner-speed ease-in-out, top $corner-speed ease-in-out;
			}
		}

		&:hover, &:focus-within {
			> a {
				background-color: rgba($accent, 0.03);
				outline: none;
			}

			.link-card-corner {
				bottom: 0;
				right: 0;

				box-shadow: -4px -4px 10px rgba(#000, 0.1);

				&::after {
					top: 3px;
					left: 3px;
				}
			}
		}
	}
</style>
