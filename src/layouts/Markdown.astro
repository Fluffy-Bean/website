---
import { getMonth, getDaySuffix } from "../utils";
import HomeButton from "../components/HomeButton.astro";

interface Props {
    post: any,
    prev?: any,
    next?: any,
    base: string,
}

const { post, prev, next, base } = Astro.props;

const date = new Date(post.data.pubDate);
---

<HomeButton />

<!-- If I ever move anything around, this will fucking break -->
<a href=`https://github.com/Fluffy-Bean/website/tree/main/src/content/${base}/${post.id}` id="source" class="button">
    Source
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 256 256"><path d="M69.12,94.15,28.5,128l40.62,33.85a8,8,0,1,1-10.24,12.29l-48-40a8,8,0,0,1,0-12.29l48-40a8,8,0,0,1,10.24,12.3Zm176,27.7-48-40a8,8,0,1,0-10.24,12.3L227.5,128l-40.62,33.85a8,8,0,1,0,10.24,12.29l48-40a8,8,0,0,0,0-12.29ZM162.73,32.48a8,8,0,0,0-10.25,4.79l-64,176a8,8,0,0,0,4.79,10.26A8.14,8.14,0,0,0,96,224a8,8,0,0,0,7.52-5.27l64-176A8,8,0,0,0,162.73,32.48Z"></path></svg>
</a>

<div class="header">
    <h1>{post.data.title}</h1>
    {post.data.pubDate ? (
        <p>{date.getDate()}{getDaySuffix(date)} {getMonth(date)} {date.getFullYear()} â€¢ {post.data.description}</p>
    ) : (
        <p>{post.data.description}</p>
    )}
    <ul id="tags" class="pill-list" role="list">
        {post.data.tags.map((item: string) => ( <li class="pill">#{item}</li> ))}
    </ul>
</div>

<hr>

<div id="markdown">
    <div style="margin-bottom: 32px" />
    <slot></slot>
    <div style="margin-top: 32px" />
</div>

{(prev || next) && ( <hr> )}

<ul id="controls" role="list">
    <li>
        {prev && (
            <a class="button" href=`/${base}/${prev.slug}` id="prev">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 256 256"><path d="M224,128a8,8,0,0,1-8,8H59.31l58.35,58.34a8,8,0,0,1-11.32,11.32l-72-72a8,8,0,0,1,0-11.32l72-72a8,8,0,0,1,11.32,11.32L59.31,120H216A8,8,0,0,1,224,128Z"></path></svg>
                Newer
            </a>
        )}
    </li>
    <li>
        {next && (
            <a class="button" href=`/${base}/${next.slug}` id="next">
                Older
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 256 256"><path d="M221.66,133.66l-72,72a8,8,0,0,1-11.32-11.32L196.69,136H40a8,8,0,0,1,0-16H196.69L138.34,61.66a8,8,0,0,1,11.32-11.32l72,72A8,8,0,0,1,221.66,133.66Z"></path></svg>
            </a>
        )}
    </li>
</ul>


<style is:global lang="scss">
    @import "../styles/vars";

    #source {
        padding: 0 20px;

        position: absolute;
        top: 8px;
        right: 0;

        border-top-right-radius: 0;
        border-bottom-right-radius: 0;

        &:before {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    /*#source {*/
    /*    position: absolute;*/
    /*    top: 16px;*/
    /*    right: 16px;*/

    /*    text-decoration: none;*/

    /*    color: $accent;*/

    /*    &:hover, &:focus-visible {*/
    /*        text-decoration: underline;*/
    /*    }*/
    /*}*/

    #controls {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-content: center;

        > li > .button {
            min-width: 35px;
            height: 35px;

            display: flex;
            justify-content: center;
            align-items: center;
        }
    }

    #markdown {
        margin: -32px 0;
        display: block;
        flex-grow: 1;


        :target {
            scroll-margin-block: 5ex;
        }

        h1, h2, h3, h4, h5, h6 {
            margin-top: 16px;
            margin-bottom: 8px;
            line-height: 1.1;
            text-wrap: balance;
        }

        p {
            margin-bottom: 8px;
        }

        a {
            text-decoration: underline;
            
            color: $accent;

            &:hover, &:focus-visible {
                color: $light;
            }

            &:focus-visible {
                border-radius: $radius;
                outline: 1px solid $light;
            }

            &:is([class]) {
                text-decoration-skip-ink: auto;
                text-decoration: none;
            }
        }

        ol, ul {
            padding-left: 32px;
        }

        hr {
            margin: 16px 0;
            border: 0;
            border-top: 2px solid $gray;
        }

        p code {
            padding: 2px 4px;

            font-size: 13px;

            border-radius: $radius;
            background-color: $gray;
            color: $light;

            overflow-x: auto
        }

        blockquote {
            margin: 8px 0 8px 16px;
            padding: 0 8px;

            font-style: italic;

            border-left: 2px solid $accent;
        }

        table {
            width: 100%;

            /*border: 1px solid $gray;*/

            border-collapse: collapse;

            tr {
                /*border-bottom: 1px solid $gray;*/

                &:nth-child(even) td {
                    background-color: rgba($gray, 0.35);
                }

                &:last-of-type {
                    /*border: 0 solid transparent;*/
                }

                td {
                    padding: 8px 16px;

                    font-size: 13px;

                    border-right: 1px solid $gray;

                    &:first-child {
                        border-bottom-left-radius: $radius;
                    }
                    &:last-child {
                        border-bottom-right-radius: $radius;
                    }
                    &:last-of-type {
                        border-right: 0 solid transparent;
                    }
                }

                th {
                    padding: 8px 16px;

                    font-size: 13px;
                    font-weight: 500;

                    background-color: rgba($accent, 0.3);
                    color: $light;

                    &:first-child {
                        border-top-left-radius: $radius;
                    }
                    &:last-child {
                        border-top-right-radius: $radius;
                    }
                }
            }
        }

        img {
            max-width: 100%;
            height: auto;

            border-radius: $radius;
        }

        .astro-code {
            margin: 16px 0;

            padding: 40px 8px 8px;

            position: relative;

            display: block;

            font-size: 13px;

            border-radius: $radius;

            &::before {
                content: attr(data-language);

                padding: 4px 16px;

                width: max-content;
                height: 28px;

                position: absolute;
                top: 4px;
                left: 0;

                font-size: 13px;
                text-transform: capitalize;

                border-top-right-radius: 9999px;
                border-bottom-right-radius: 9999px;
                background-color: $gray;
                color: $light;
            }

            &:focus-visible {
                outline: 1px solid $light;
            }
        }

        .footnotes {
            margin-top: 32px;
            padding: 16px;

            border-radius: $radius;
            background-color: $gray;

            > h2 {
                margin-top: 0;
            }
        }
    }
</style>
